using System;
using static QualiteDev.Program;

namespace QualiteDev
{
    internal class Program
    {
        public class Media
        {
            // Déclarez les champs comme "protected" pour qu'ils soient accessibles aux classes dérivées.
            protected string Titre;
            protected int NReference;
            protected int nbExemplaire;

            public Media()
            {
                Titre = "Inconnu";
                NReference = 0;
                nbExemplaire = 0;
            }

            public Media(string titre, int nReference, int nbExemplaire)
            {
                Titre = titre;
                NReference = nReference;
                this.nbExemplaire = nbExemplaire; // Utilisez "this" pour faire référence au champ de classe.
            }

            public virtual void AfficherInfos()
            {
                Console.Out.WriteLine("Titre: " + Titre + " NReference: " + NReference + " nbExemplaire: " + nbExemplaire);
            }
        }

        class Livre : Media
        {
            string Auteur;

            public Livre()
            {
                Auteur = "Inconnu";
            }

            public Livre(string titre, int nReference, int nbExemplaire, string auteur)
                : base(titre, nReference, nbExemplaire) // Appelez le constructeur de la classe de base avec les paramètres appropriés.
            {
                Auteur = auteur;
            }

            public override void AfficherInfos()
            {
                base.AfficherInfos();
                Console.Out.WriteLine(" Auteur: " + Auteur);
            }
        }

        class DVD : Media
        {
            int Duree;

            public DVD()
            {
                Duree = 0;
            }

            public DVD(string titre, int nReference, int nbExemplaire, int duree)
                : base(titre, nReference, nbExemplaire) // Appelez le constructeur de la classe de base avec les paramètres appropriés.
            {
                Duree = duree;
            }

            public override void AfficherInfos()
            {
                base.AfficherInfos();
                Console.Out.WriteLine(" Duree: " + Duree);
            }
        }

        class CD : Media
        {
            string Artiste;

            public CD()
            {
                Artiste = "Inconnu";
            }

            public CD(string titre, int nReference, int nbExemplaire, string artiste)
                : base(titre, nReference, nbExemplaire) // Appelez le constructeur de la classe de base avec les paramètres appropriés.
            {
                Artiste = artiste;
            }

            public override void AfficherInfos()
            {
                base.AfficherInfos();
                Console.Out.WriteLine(" Artiste: " + Artiste);
            }
        }

        public class Tools
        {
            public static void AjouterMediaABibliotheque(Library library, Media media)
            {
                library.AjouterMedia(media);
            }

            public static Library operator +(Library library, Media media)
            {
                AjouterMediaABibliotheque(library, media);
                return library;
            }

            public static void RetirerMediaDeBibliotheque(Library library, Media media)
            {
                library.RetirerMedia(media);
            }

            // Surcharge de l'opérateur "-" pour retirer un média de la bibliothèque
            public static Library operator -(Library library, Media media)
            {
                RetirerMediaDeBibliotheque(library, media);
                return library;
            }
        }

        public class Library
        {
            private List<Media> medias = new List<Media>();

            public void AjouterMedia(Media media)
            {
                medias.Add(media);
            }

            public void RetirerMedia(Media media)
            {
                if (medias.Contains(media))
                {
                    medias.Remove(media);
                    Console.WriteLine("Média retiré de la bibliothèque :");
                    media.AfficherInfos();
                }
                else
                {
                    Console.WriteLine("Le média n'est pas dans la bibliothèque.");
                }
            }
        }

        public Media this[int numeroReference]
        {
            get
            {
                foreach (var media in medias)
                {
                    if (media.NReference == numeroReference)
                    {
                        return media;
                    }
                }
                // Retourne null si le média n'est pas trouvé
                return null;
            }
        }

        public static void Main()
        {
            var library = new Library();

            var media = new Media("Média 1", 1, 10);
            media.AfficherInfos();

            var cd = new CD("CD 1", 2, 5, "Artiste 1");
            cd.AfficherInfos();

            var dvd = new DVD("DVD 1", 3, 8, 120);
            dvd.AfficherInfos();

            var livre = new Livre("Livre 1", 4, 3, "Auteur 1");
            livre.AfficherInfos();

            library += media;
            library += cd;
            library += dvd;
            library += livre;



        }
    }
}
